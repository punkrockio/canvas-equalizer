{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c7e0d7768e5d442e672b","webpack:///../~/deep-assign/index.js","webpack:///./ts/CanvasEqualizer.ts","webpack:///./ts/index.ts","webpack:///./ts/Common.ts","webpack:///./ts/Equalizer.ts","webpack:///./ts/FFTNR.ts","webpack:///./ts/L10n.ts","webpack:///../~/is-obj/index.js","webpack:///./locales/en.json"],"names":[],"mappings":"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","file":"js/CanvasEqualizer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasEqualizer\"] = factory();\n\telse\n\t\troot[\"CanvasEqualizer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c7e0d7768e5d442e672b","'use strict';\nvar isObj = require('is-obj');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Sources cannot be null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction assignKey(to, from, key) {\n\tvar val = from[key];\n\n\tif (val === undefined || val === null) {\n\t\treturn;\n\t}\n\n\tif (hasOwnProperty.call(to, key)) {\n\t\tif (to[key] === undefined || to[key] === null) {\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object (' + key + ')');\n\t\t}\n\t}\n\n\tif (!hasOwnProperty.call(to, key) || !isObj(val)) {\n\t\tto[key] = val;\n\t} else {\n\t\tto[key] = assign(Object(to[key]), from[key]);\n\t}\n}\n\nfunction assign(to, from) {\n\tif (to === from) {\n\t\treturn to;\n\t}\n\n\tfrom = Object(from);\n\n\tfor (var key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tassignKey(to, from, key);\n\t\t}\n\t}\n\n\tif (Object.getOwnPropertySymbols) {\n\t\tvar symbols = Object.getOwnPropertySymbols(from);\n\n\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\tassignKey(to, from, symbols[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n}\n\nmodule.exports = function deepAssign(target) {\n\ttarget = toObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tassign(target, arguments[s]);\n\t}\n\n\treturn target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/deep-assign/index.js\n// module id = 0\n// module chunks = 0 1","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/kantoradio/canvas-equalizer\n */\n\nimport deepAssign from 'deep-assign';\n\nimport {\n    keyPressed,\n    elemCoords,\n    attachPointer, detachPointer, cancelEvent,\n    throttledFunction, addThrottledEvent, removeThrottledEvent,\n} from './Common';\n\nimport Equalizer from './Equalizer';\nimport L10n from './L10n';\n\nimport ICanvasEqualizerOptions from './ICanvasEqualizerOptions';\nimport ILocale from './ILocale';\n\nconst defaultOptions: ICanvasEqualizerOptions = {\n    classNamespace: 'GE',\n    filterOptions: {},\n    updateFilterOnDrag: true,\n};\n\nexport default class CanvasEqualizer {\n\n    private _options: ICanvasEqualizerOptions;\n    private _filter: Equalizer;\n    private _element: HTMLElement;\n    private _canvas: HTMLCanvasElement;\n    private _ctx: CanvasRenderingContext2D;\n    private _rangeImage: CanvasGradient;\n    private _btnMnu: HTMLButtonElement;\n    private _mnu: HTMLElement;\n    private _mnuChBL: HTMLButtonElement;\n    private _mnuChL: HTMLButtonElement;\n    private _mnuChBR: HTMLButtonElement;\n    private _mnuChR: HTMLButtonElement;\n    private _mnuShowZones: HTMLButtonElement;\n    private _mnuEditZones: HTMLButtonElement;\n    private _mnuNormalizeCurves: HTMLButtonElement;\n    private _mnuShowActual: HTMLButtonElement;\n    private _lblCursor: HTMLElement;\n    private _lblCurve: HTMLElement;\n    private _lblFrequency: HTMLElement;\n    private _stb: HTMLElement;\n    private _showZones = false;\n    private _editZones = false;\n    private _isActualChannelCurveNeeded = true;\n    private _currentChannelIndex = 0;\n    private _isSameFilterLR = true;\n    private _drawingMode = 0;\n    private _lastDrawX = 0;\n    private _lastDrawY = 0;\n    private _barHideTimeout: number;\n    private _l10n: L10n;\n    private _isRTL = false;\n\n    constructor(filterLength: number, audioContext: AudioContext, options: ICanvasEqualizerOptions = {}) {\n        this._options = deepAssign({}, defaultOptions, options);\n        this._filter = new Equalizer(filterLength, audioContext, this._options.filterOptions);\n        this._l10n = new L10n(this._options.language);\n    }\n\n    public createControl(placeholder: HTMLElement): HTMLCanvasElement {\n        if (!this._ctx) {\n            const createLabel = (name: string, content: string) => {\n                const lbl = document.createElement('div');\n                lbl.className = `${clsNS}LBL ${clsNS}LBL${name}`;\n                lbl.innerHTML = this._l10n.get(content);\n                return lbl;\n            };\n            const createMenuSep = () => {\n                const s = document.createElement('div');\n                s.className = `${clsNS}MNUSEP`;\n                s.setAttribute('role', 'separator');\n                return s;\n            };\n            const createMenuLabel = (text: string) => {\n                const l = document.createElement('div');\n                l.className = `${clsNS}MNULBL`;\n                l.textContent = this._l10n.get(text);\n                return l;\n            };\n            const createMenuItem = (text: string, checkable: boolean | string, checked: boolean,\n                                    clickHandler: (e?: MouseEvent) => any) => {\n                const i = document.createElement('button');\n                i.type = 'button';\n                i.className = `${clsNS}MNUIT ${clsNS}CLK`;\n\n                if (checkable) {\n                    if (typeof checkable === 'string') {\n                        i.dataset['radioGroup'] = checkable;\n                        i.setAttribute('role', 'menuitemradio');\n                    }\n                    else {\n                        i.setAttribute('role', 'menuitemcheckbox');\n                    }\n\n                    const s = document.createElement('span');\n                    s.textContent = typeof checkable === 'string' ? '● ' : '■ ';\n                    i.appendChild(s);\n                    this._checkMenu(i, checked);\n                }\n                else {\n                    i.setAttribute('role', 'menuitem');\n                }\n\n                i.appendChild(document.createTextNode(this._l10n.get(text)));\n\n                if (clickHandler) {\n                    i.addEventListener('click', clickHandler);\n                }\n\n                i.addEventListener('mouseenter', () => {\n                    i.focus();\n                });\n                i.addEventListener('mouseleave', () => {\n                    i.blur();\n                });\n\n                return i;\n            };\n            const clsNS = this._options.classNamespace!;\n\n            this._element = placeholder;\n            placeholder.className = clsNS;\n\n            if (/\\bip(?:[ao]d|hone)\\b/i.test(navigator.userAgent) && !(window as any).MSStream) {\n                placeholder.classList.add(`${clsNS}IOS`);\n            }\n\n            if (getComputedStyle(placeholder).direction === 'rtl') {\n                placeholder.classList.add('RTL');\n                this._isRTL = true;\n            }\n\n            placeholder.addEventListener('contextmenu', cancelEvent);\n\n            this._stb = document.createElement('div');\n            this._stb.className = `${clsNS}STB`;\n            placeholder.appendChild(this._stb);\n\n            this._canvas = document.createElement('canvas');\n            this._canvas.className = `${clsNS}CNV`;\n            attachPointer(this._canvas, 'down', this._canvasMouseDown);\n            attachPointer(this._canvas, 'move', this._canvasMouseMove);\n            attachPointer(this._canvas, 'up', this._canvasMouseUp);\n            this._canvas.addEventListener('contextmenu', cancelEvent);\n            placeholder.appendChild(this._canvas);\n            addThrottledEvent(window, 'resize', this._windowResize);\n\n            const ctx = this._canvas.getContext('2d');\n\n            if (!ctx) {\n                throw new Error('Unable to get a 2D context.');\n            }\n\n            this._ctx = ctx;\n\n            this._stb.appendChild(this._lblCursor = createLabel('CSR', 'cursor.label'));\n            this._stb.appendChild(this._lblCurve = createLabel('CRV', 'curve.label'));\n            this._stb.appendChild(this._lblFrequency = createLabel('FRQ', 'frequency.label'));\n            this._setStatusBar(0, this._filter.zeroChannelValueY, this._filter.zeroChannelValueY);\n\n            this._btnMnu = document.createElement('button');\n            this._btnMnu.type = 'button';\n            this._btnMnu.className = `${clsNS}BTN ${clsNS}CLK`;\n            this._btnMnu.setAttribute('aria-haspopup', 'true');\n            this._btnMnu.setAttribute('aria-label', this._l10n.get('menu'));\n            this._btnMnu.addEventListener('click', this._btnMnuClick);\n            this._btnMnu.addEventListener('keydown', this._btnMnuKeyDown);\n            this._btnMnu.addEventListener('mouseenter', () => {\n                this._btnMnu.focus();\n            });\n            this._btnMnu.addEventListener('mouseleave', () => {\n                this._btnMnu.blur();\n            });\n            this._stb.appendChild(this._btnMnu);\n\n            this._mnu = document.createElement('div');\n            this._mnu.className = `${clsNS}MNU`;\n            this._mnu.setAttribute('role', 'menu');\n            this._mnu.addEventListener('keydown', this._mnuKeyDown);\n            this._mnu.appendChild(createMenuLabel('menu.both'));\n            this._mnu.appendChild(this._mnuChBL =\n                createMenuItem('menu.both.left', 'curve', true, this._mnuChBLClick));\n            this._mnu.appendChild(this._mnuChBR =\n                createMenuItem('menu.both.right', 'curve', false, this._mnuChBRClick));\n            this._mnu.appendChild(createMenuSep());\n            this._mnu.appendChild(createMenuLabel('menu.one'));\n            this._mnu.appendChild(this._mnuChL =\n                createMenuItem('menu.one.left', 'curve', false, this._mnuChLClick));\n            this._mnu.appendChild(this._mnuChR =\n                createMenuItem('menu.one.right', 'curve', false, this._mnuChRClick));\n            this._mnu.appendChild(createMenuSep());\n            this._mnu.appendChild(this._mnuShowZones =\n                createMenuItem('menu.zones', true, false, this._mnuShowZonesClick));\n            this._mnu.appendChild(this._mnuEditZones =\n                createMenuItem('menu.zoneEdit', true, false, this._mnuEditZonesClick));\n            this._mnu.appendChild(createMenuSep());\n            this._mnu.appendChild(this._mnuNormalizeCurves =\n                createMenuItem('menu.normalizeCurves', true, false, this._mnuNormalizeCurvesClick));\n            this._mnu.appendChild(this._mnuShowActual =\n                createMenuItem('menu.actualResponse', true, true, this._mnuShowActualClick));\n            this._stb.appendChild(this._mnu);\n            this._toggleMenu(false);\n\n            this._fixCanvasSize();\n            this._drawCurve();\n        }\n        return this._canvas;\n    }\n\n    public destroyControl() {\n        if (this._ctx) {\n            removeThrottledEvent(window, 'resize', this._windowResize);\n            delete this._canvas;\n            delete this._lblCursor;\n            delete this._lblCurve;\n            delete this._lblFrequency;\n            delete this._btnMnu;\n            delete this._mnu;\n            delete this._mnuChBL;\n            delete this._mnuChL;\n            delete this._mnuChBR;\n            delete this._mnuChR;\n            delete this._mnuShowZones;\n            delete this._mnuEditZones;\n            delete this._mnuNormalizeCurves;\n            delete this._mnuShowActual;\n            delete this._stb;\n            delete this._ctx;\n            delete this._rangeImage;\n            this._element.innerHTML = '';\n            delete this._element;\n            clearTimeout(this._barHideTimeout);\n        }\n    }\n\n    public reset() {\n        this._filter.reset();\n        this._drawCurve();\n    }\n\n    public loadLocale(language: string, locale: ILocale) {\n        this._l10n.loadLocale(language, locale);\n    }\n\n    /* tslint:disable:no-magic-numbers */\n    private _formatDB(dB: number): string {\n        if (dB < -40) {\n            dB = -Infinity;\n        }\n\n        const ret = dB.toLocaleString(this._l10n.language, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n        return dB < 0 ? ret.replace('-', '−') : (dB === 0 ? '−' + ret : '+' + ret);\n    }\n\n    private _formatFrequencyUnit = (frequency: number, compact: boolean): string => {\n        let unit = 'Hz';\n\n        if (compact) {\n            if (frequency >= 1000) {\n                unit = 'k' + unit;\n                frequency = frequency / 1000;\n            }\n        }\n\n        return this._l10n.format('frequency.format', frequency, this._l10n.get(`frequency.unit.${unit}`));\n    }\n\n    private _formatFrequency(frequencyAndEquivalent: number[]): string {\n        return this._l10n.format('frequency.text',\n            ...frequencyAndEquivalent.map((frequency: number, i: number) => this._formatFrequencyUnit(frequency, !!i)));\n    }\n    /* tslint:enable:no-magic-numbers */\n\n    private _checkMenu(mnu: HTMLButtonElement, chk: boolean) {\n\n        function inner(elem: HTMLElement, toggle: boolean) {\n            if (elem) {\n                elem.style.visibility = toggle ? 'visible' : 'hidden';\n                elem.setAttribute('aria-checked', toggle.toString());\n            }\n        }\n\n        if (chk && mnu.dataset['radioGroup']) {\n            [].slice.call(this._mnu.querySelectorAll(`[data-radio-group=\"${mnu.dataset['radioGroup']}\"]`))\n                .forEach((elem: HTMLButtonElement) => {\n                    inner(elem.firstChild as HTMLElement, false);\n                });\n        }\n\n        inner(mnu.firstChild as HTMLElement, chk);\n    }\n\n    private _drawCurve() {\n        /* tslint:disable:no-magic-numbers */\n        // all the 0.5's here are because of this explanation:\n        // http://stackoverflow.com/questions/195262/can-i-turn-off-antialiasing-on-an-html-canvas-element\n        // \"Draw your 1-pixel lines on coordinates like ctx.lineTo(10.5, 10.5). Drawing a one-pixel line\n        // over the point (10, 10) means, that this 1 pixel at that position reaches from 9.5 to 10.5 which\n        // results in two lines that get drawn on the canvas.\n        function pixelRound(x: number): number {\n            return Math.round(x) + middleOffset;\n        }\n\n        const ctx = this._ctx;\n        const canvas = this._canvas;\n        const pixelRatio = window.devicePixelRatio;\n        const width = canvas.width / pixelRatio;\n        const height = canvas.height / pixelRatio;\n        const widthRatio = this._widthRatio();\n        const heightRatio = this._heightRatio();\n        const widthMinus1 = this._filter.options.visibleBinCount! - 1;\n        const middleOffset = 0.5;\n        let curve = this._filter.channelCurves[this._currentChannelIndex];\n\n        if (!ctx) {\n            return false;\n        }\n\n        ctx.fillStyle = '#303030';\n        ctx.fillRect(0, 0, width, height);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = '#5a5a5a';\n        ctx.beginPath();\n        let x = width + 1 + middleOffset;\n        let y = pixelRound(this._filter.zeroChannelValueY * heightRatio);\n        ctx.moveTo(x, y);\n\n        while (x > 0) {\n            ctx.lineTo(x - 4, y);\n            x -= 10;\n            ctx.moveTo(x, y);\n        }\n\n        ctx.stroke();\n        ctx.font = 'bold 10pt Verdana';\n        ctx.textAlign = this._isRTL ? 'left' : 'right';\n        ctx.fillStyle = '#5a5a5a';\n        ctx.fillText('\\u200e−0dB', this._isRTL ? 1 : width - 1,\n            Math.round(this._filter.zeroChannelValueY * heightRatio) - 2);\n        ctx.beginPath();\n        x = width - 1 - middleOffset;\n        y = pixelRound(this._filter.options.validYRangeHeight! * heightRatio);\n        ctx.moveTo(x, y);\n\n        while (x > 0) {\n            ctx.lineTo(x - 4, y);\n            x -= 10;\n            ctx.moveTo(x, y);\n        }\n\n        ctx.stroke();\n        ctx.fillText('\\u200e−∞dB', this._isRTL ? 1 : width - 1,\n            Math.round(this._filter.options.validYRangeHeight! * heightRatio) - 2);\n\n        if (this._showZones) {\n            for (let i = this._filter.equivalentZonesFrequencyCount.length - 2; i > 0; i--) {\n                x = pixelRound(this._filter.equivalentZonesFrequencyCount[i] * widthRatio);\n                y = 0;\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n\n                while (y < height) {\n                    ctx.lineTo(x, y + 4);\n                    y += 10;\n                    ctx.moveTo(x, y);\n                }\n\n                ctx.stroke();\n            }\n        }\n\n        ctx.strokeStyle = this._isActualChannelCurveNeeded && !this._drawingMode ? '#707070' : this._rangeImage;\n        ctx.beginPath();\n        ctx.moveTo(0.5, pixelRound(curve[0] * heightRatio));\n\n        for (x = 1; x < widthMinus1; x++) {\n            ctx.lineTo(pixelRound(x * widthRatio), pixelRound(curve[x] * heightRatio));\n        }\n\n        // just to fill up the last pixel!\n        ctx.lineTo(Math.round(x * widthRatio) + 1, pixelRound(curve[x] * heightRatio));\n        ctx.stroke();\n\n        if (this._isActualChannelCurveNeeded && !this._drawingMode) {\n            curve = this._filter.actualChannelCurve;\n            ctx.strokeStyle = this._rangeImage;\n            ctx.beginPath();\n            ctx.moveTo(middleOffset, pixelRound(curve[0] * heightRatio));\n\n            for (x = 1; x < widthMinus1; x++) {\n                ctx.lineTo(pixelRound(x * widthRatio),\n                    pixelRound(curve[x] * heightRatio));\n            }\n\n            // just to fill up the last pixel!\n            ctx.lineTo(Math.round(x * widthRatio) + 1, pixelRound(curve[x] * heightRatio));\n            ctx.stroke();\n        }\n\n        return true;\n        /* tslint:enable:no-magic-numbers */\n    }\n\n    private _widthRatio(): number {\n        return this._canvas.width / window.devicePixelRatio / this._filter.options.visibleBinCount!;\n    }\n\n    private _heightRatio(): number {\n        const height = this._stb.clientHeight;\n        // tslint:disable-next-line:no-magic-numbers\n        return (this._canvas.height / window.devicePixelRatio - height - 5) / this._filter.options.validYRangeHeight!;\n    }\n\n    private _fixCanvasSize() {\n        this._canvas.style.display = 'none';\n        const rect = this._element.getBoundingClientRect();\n        const pixelRatio = window.devicePixelRatio;\n        this._canvas.style.display = '';\n        this._canvas.style.width = rect.width + 'px';\n        this._canvas.style.height = rect.height + 'px';\n        this._canvas.width = rect.width * pixelRatio;\n        this._canvas.height = rect.height * pixelRatio;\n\n        this._ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n        /* tslint:disable:no-magic-numbers */\n        this._rangeImage = this._ctx.createLinearGradient(0, 0, 0, rect.height - this._stb.clientHeight - 5);\n        this._rangeImage.addColorStop(0, '#ff0000');\n        this._rangeImage.addColorStop(0.1875, '#ffff00');\n        this._rangeImage.addColorStop(0.39453125, '#00ff00');\n        this._rangeImage.addColorStop(0.60546875, '#00ffff');\n        this._rangeImage.addColorStop(0.796875, '#0000ff');\n        this._rangeImage.addColorStop(1, '#ff00ff');\n        /* tslint:enable:no-magic-numbers */\n\n        this._drawCurve();\n    }\n\n    private _wrappedUpdateFilter = () => {\n        this._filter.updateFilter(false);\n    }\n\n    private _setLabelParam(label: HTMLElement, text: string) {\n        const span = label.querySelector('span');\n\n        if (span) {\n            span.textContent = text;\n        }\n    }\n\n    private _setStatusBar(x: number, y: number, curveY: number) {\n        this._setLabelParam(this._lblCursor, this._formatDB(this._filter.yToDB(y)));\n        this._setLabelParam(this._lblCurve, this._formatDB(this._filter.yToDB(curveY)));\n        this._setLabelParam(this._lblFrequency, this._formatFrequency(this._filter.visibleBinToFrequencyGroup(x)));\n    }\n\n    private _toggleMenu(toggle?: boolean) {\n        toggle = toggle === undefined ? this._mnu.style.display === 'none' : toggle;\n\n        this._mnu.style.display = toggle ? '' : 'none';\n        this._btnMnu.textContent = toggle ? '▼' : '▲';\n    }\n\n    // events\n\n    private _btnMnuClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._toggleMenu();\n        }\n    }\n\n    private _mnuChBLClick = (e: MouseEvent) => {\n        this._mnuChBClick(e, 0);\n    }\n\n    private _mnuChBRClick = (e: MouseEvent) => {\n        this._mnuChBClick(e, 1);\n    }\n\n    private _mnuChBClick = (e: MouseEvent, channelIndex: number) => {\n        if (!e.button) {\n            if (!this._isSameFilterLR || this._currentChannelIndex !== channelIndex) {\n                if (this._isSameFilterLR) {\n                    this._currentChannelIndex = channelIndex;\n                    this._filter.channelIndex = -1;\n                    this._filter.updateFilter(true);\n\n                    if (this._isActualChannelCurveNeeded) {\n                        this._filter.updateActualChannelCurve(channelIndex);\n                    }\n\n                    this._drawCurve();\n                }\n                else {\n                    this._isSameFilterLR = true;\n                    this._filter.copyFilter(channelIndex, 1 - channelIndex);\n                    if (this._currentChannelIndex !== channelIndex) {\n                        this._currentChannelIndex = channelIndex;\n\n                        if (this._isActualChannelCurveNeeded) {\n                            this._filter.updateActualChannelCurve(channelIndex);\n                        }\n\n                        this._drawCurve();\n                    }\n                }\n\n                this._checkMenu(this._mnuChBL, channelIndex === 0);\n                this._checkMenu(this._mnuChBR, channelIndex === 1);\n            }\n        }\n    }\n\n    private _mnuChLClick = (e: MouseEvent) => {\n        this._mnuChLRClick(e, 0);\n    }\n\n    private _mnuChRClick = (e: MouseEvent) => {\n        this._mnuChLRClick(e, 1);\n    }\n\n    private _mnuChLRClick = (e: MouseEvent, channelIndex: number) => {\n        if (!e.button) {\n            if (this._isSameFilterLR || this._currentChannelIndex !== channelIndex) {\n                if (this._isSameFilterLR) {\n                    this._isSameFilterLR = false;\n                    this._filter.channelIndex = 1 - this._currentChannelIndex;\n                    this._filter.updateFilter(false);\n                }\n\n                if (this._currentChannelIndex !== channelIndex) {\n                    this._currentChannelIndex = channelIndex;\n\n                    if (this._isActualChannelCurveNeeded) {\n                        this._filter.updateActualChannelCurve(channelIndex);\n                    }\n\n                    this._drawCurve();\n                }\n\n                this._checkMenu(this._mnuChL, channelIndex === 0);\n                this._checkMenu(this._mnuChR, channelIndex === 1);\n            }\n        }\n    }\n\n    private _mnuShowZonesClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._showZones = !this._showZones;\n            this._checkMenu(this._mnuShowZones, this._showZones);\n            this._drawCurve();\n        }\n    }\n\n    private _mnuEditZonesClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._editZones = !this._editZones;\n            this._canvas.classList[this._editZones ? 'add' : 'remove'](`${this._options.classNamespace}CNVZON`);\n            this._checkMenu(this._mnuEditZones, this._editZones);\n        }\n    }\n\n    private _mnuNormalizeCurvesClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._filter.isNormalized = !this._filter.isNormalized;\n            this._checkMenu(this._mnuNormalizeCurves, this._filter.isNormalized);\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n                this._drawCurve();\n            }\n        }\n    }\n\n    private _mnuShowActualClick = (e: MouseEvent) => {\n        if (!e.button) {\n            this._isActualChannelCurveNeeded = !this._isActualChannelCurveNeeded;\n            this._checkMenu(this._mnuShowActual, this._isActualChannelCurveNeeded);\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n            }\n\n            this._drawCurve();\n        }\n    }\n\n    private _btnMnuKeyDown = (e: KeyboardEvent) => {\n        if (keyPressed(e, 'ArrowUp', 'ArrowDown')) {\n            cancelEvent(e);\n            this._toggleMenu(keyPressed(e, 'ArrowUp'));\n\n            window.setTimeout(() => {\n                const items = this._mnu.querySelectorAll(`.${this._options.classNamespace!}MNUIT`);\n                (items[items.length - 1] as HTMLButtonElement).focus();\n            });\n        }\n    }\n\n    private _mnuKeyDown = (e: KeyboardEvent) => {\n\n        const moveFocus = (elem: Node, down: boolean) => {\n            const siblingProp = down ? 'nextSibling' : 'previousSibling';\n            let currentElem: Node | null = elem;\n\n            do {\n                currentElem = currentElem[siblingProp];\n\n                if (currentElem instanceof HTMLButtonElement &&\n                    currentElem.classList.contains(`${this._options.classNamespace!}MNUIT`)) {\n                    currentElem.focus();\n                    return true;\n                }\n            } while (currentElem);\n\n            return false;\n        };\n\n        if (keyPressed(e, 'ArrowUp', 'ArrowDown')) {\n            cancelEvent(e);\n            const down = keyPressed(e, 'ArrowDown');\n            if (!moveFocus(e.target as Node, down) && down) {\n                this._btnMnu.focus();\n            }\n        }\n    }\n\n    private _canvasMouseDown = (e: MouseEvent) => {\n        if (!e.button) {\n            if (!this._drawingMode) {\n                const { x, y } = elemCoords(this._canvas, e);\n\n                const normX = Math.floor(x / this._widthRatio());\n                const normY = y / this._heightRatio();\n\n                if (normX >= 0 && normX < this._filter.options.visibleBinCount!) {\n                    this._drawingMode = 1;\n                    if (this._editZones) {\n                        this._filter.changeZoneY(this._currentChannelIndex, normX, normY);\n                    }\n                    else {\n                        this._filter.channelCurves[this._currentChannelIndex][normX] = this._filter.clampY(normY);\n                        this._lastDrawX = normX;\n                        this._lastDrawY = normY;\n                    }\n\n                    this._drawCurve();\n\n                    if (this._canvas.setPointerCapture) {\n                        this._canvas.setPointerCapture((e as PointerEvent).pointerId);\n                    }\n                    else if (!(e as any).clonedFromTouch) {\n                        detachPointer(this._canvas, 'move', this._canvasMouseMove);\n                        detachPointer(this._canvas, 'up', this._canvasMouseUp);\n                        attachPointer(document, 'move', this._documentMouseMove, true);\n                        attachPointer(document, 'up', this._documentMouseUp, true);\n                    }\n                }\n            }\n\n            return cancelEvent(e);\n        }\n\n        return true;\n    }\n\n    private _canvasMouseUp = (e: MouseEvent) => {\n        if (this._drawingMode) {\n            this._drawingMode = 0;\n            this._filter.channelIndex = this._currentChannelIndex;\n            this._filter.updateFilter(false);\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n            }\n\n            this._drawCurve();\n\n            if (this._canvas.releasePointerCapture) {\n                this._canvas.releasePointerCapture((e as PointerEvent).pointerId);\n            }\n            else if (!(e as any).clonedFromTouch) {\n                detachPointer(document, 'move', this._documentMouseMove, true);\n                detachPointer(document, 'up', this._documentMouseUp, true);\n                attachPointer(this._canvas, 'move', this._canvasMouseMove);\n                attachPointer(this._canvas, 'up', this._canvasMouseUp);\n            }\n        }\n    }\n\n    private _canvasMouseMove = (e: MouseEvent) => {\n        let curve = this._filter.channelCurves[this._currentChannelIndex];\n        const { x, y } = elemCoords(this._canvas, e);\n\n        if (this._drawingMode || (x >= 0 && x < this._canvas.width && y >= 0 && y < this._canvas.height)) {\n            let normX = Math.floor(x / this._widthRatio());\n            let normY = y / this._heightRatio();\n\n            if (normX < 0) {\n                normX = 0;\n            }\n            else if (normX >= this._filter.options.visibleBinCount!) {\n                normX = this._filter.options.visibleBinCount! - 1;\n            }\n\n            if (this._drawingMode) {\n                if (this._editZones) {\n                    this._filter.changeZoneY(this._currentChannelIndex, normX, normY);\n                }\n                else {\n                    if (Math.abs(normX - this._lastDrawX) > 1) {\n                        const delta = (normY - this._lastDrawY) / Math.abs(normX - this._lastDrawX);\n                        const inc = ((normX < this._lastDrawX) ? -1 : 1);\n                        normY = this._lastDrawY + delta;\n                        let count = Math.abs(normX - this._lastDrawX) - 1;\n\n                        for (normX = this._lastDrawX + inc; count > 0; normX += inc, count--) {\n                            curve[normX] = this._filter.clampY(normY);\n                            normY += delta;\n                        }\n                    }\n\n                    curve[normX] = this._filter.clampY(normY);\n                    this._lastDrawX = normX;\n                    this._lastDrawY = normY;\n                }\n                this._drawCurve();\n\n                if (this._options.updateFilterOnDrag) {\n                    // tslint:disable-next-line:no-magic-numbers\n                    throttledFunction(this._wrappedUpdateFilter, 150);\n                }\n            }\n            else if (this._isActualChannelCurveNeeded) {\n                curve = this._filter.actualChannelCurve;\n            }\n\n            this._setStatusBar(normX, normY, curve[normX]);\n\n            if (this._drawingMode) {\n                return cancelEvent(e);\n            }\n        }\n\n        return true;\n    }\n\n    private _windowResize = () => {\n        this._fixCanvasSize();\n    }\n\n    private _documentMouseMove = (e: MouseEvent) =>\n        this._canvasMouseMove(e);\n\n    private _documentMouseUp = (e: MouseEvent) => {\n        this._canvasMouseUp(e);\n    }\n\n    // virtual properties\n\n    get options(): ICanvasEqualizerOptions {\n        return deepAssign({}, defaultOptions, this._options);\n    }\n\n    get filterLength(): number {\n        return this._filter.filterLength;\n    }\n\n    set filterLength(newFilterLength: number) {\n        if (this._filter.filterLength !== newFilterLength) {\n            this._filter.filterLength = newFilterLength;\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n            }\n\n            this._drawCurve();\n        }\n    }\n\n    get sampleRate(): number {\n        return this._filter.sampleRate;\n    }\n\n    set sampleRate(newSampleRate: number) {\n        if (this._filter.sampleRate !== newSampleRate) {\n            this._filter.sampleRate = newSampleRate;\n\n            if (this._isActualChannelCurveNeeded) {\n                this._filter.updateActualChannelCurve(this._currentChannelIndex);\n            }\n\n            this._drawCurve();\n        }\n    }\n\n    get audioContext(): AudioContext {\n        return this._filter.audioContext;\n    }\n\n    set audioContext(newAudioContext: AudioContext) {\n        if (this._filter.audioContext !== newAudioContext) {\n            this._filter.audioContext = newAudioContext;\n        }\n    }\n\n    get language(): string {\n        return this._l10n.language;\n    }\n\n    set language(language: string) {\n        this._l10n.language = language;\n    }\n\n    get visibleFrequencies(): Float32Array {\n        return this._filter.visibleFrequencies;\n    }\n\n    get convolver(): ConvolverNode {\n        return this._filter.convolver;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ts/CanvasEqualizer.ts","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/kantoradio/canvas-equalizer\n */\n\n// this is needed as per https://gist.github.com/iamakulov/966b91c0fc6363a16ff0650b51fb991b\n// tslint:disable-next-line:no-require-imports\nmodule.exports = require('./CanvasEqualizer').default;\n\n\n\n// WEBPACK FOOTER //\n// ./ts/index.ts","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/kantoradio/canvas-equalizer\n */\n\n// miscellaneous functions\n\n(function (window: Window) {\n    try {\n        new CustomEvent('test');\n    }\n    catch (e) {\n        return; // no need to polyfill\n    }\n\n    // polyfills DOM4 CustomEvent\n    function MouseEvent(eventType: string, params: MouseEventInit) {\n        params = params || { bubbles: false, cancelable: false };\n        const mouseEvent = document.createEvent('MouseEvent');\n        mouseEvent.initMouseEvent(eventType, params.bubbles!, params.cancelable!, window, 1,\n                                  params.screenX!, params.screenY!, params.clientX!, params.clientY!,\n                                  params.ctrlKey!, params.altKey!, params.shiftKey!, params.metaKey!,\n                                  0, null);\n\n        return mouseEvent;\n    }\n\n    MouseEvent.prototype = Event.prototype;\n\n    (window as any).MouseEvent = MouseEvent;\n})(window);\n\ntype PointerEventShortName = 'down' | 'move' | 'up';\ntype AttachDetachSignature = (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) => void;\n\nlet attachPointer: AttachDetachSignature;\nlet detachPointer: AttachDetachSignature;\n\nfunction wrap(func: any, wrapper: any, tag: string, elem: EventTarget): any {\n    const wrapperTag = `__${tag}_wrapper__`;\n\n    if (!func[wrapperTag]) {\n        func[wrapperTag] = [];\n    }\n\n    unwrap(func, tag, elem);\n    func[wrapperTag].push({ elem, wrapper });\n    return wrapper;\n}\n\nfunction unwrap(func: any, tag: string, elem: EventTarget): any {\n    const wrapperTag = `__${tag}_wrapper__`;\n\n    let ret: any;\n\n    if (func[wrapperTag]) {\n        func[wrapperTag] = func[wrapperTag].filter((entry: { elem: EventTarget, wrapper: any }, i: number) => {\n            if (entry.elem === elem) {\n                ret = entry.wrapper;\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    return ret;\n}\n\nif ((window as any).PointerEvent) {\n    attachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        observable.addEventListener(`pointer${eventName}`, targetFunction, capturePhase);\n    };\n    detachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        observable.removeEventListener(`pointer${eventName}`, targetFunction, capturePhase);\n    };\n}\nelse if ('ontouchend' in document) {\n    const mappings: any = {\n        down: ['start'],\n        move: ['move'],\n        up: ['end', 'cancel'],\n    };\n    attachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        const wrapper = (e: TouchEvent) => {\n            const touch = e.changedTouches[0];\n            const pseudoMouse = new MouseEvent(`mouse${eventName}`, {\n                altKey: e.altKey,\n                clientX: touch && touch.clientX || 0,\n                clientY: touch && touch.clientY || 0,\n                ctrlKey: e.ctrlKey,\n                metaKey: e.metaKey,\n                screenX: touch && touch.screenX || 0,\n                screenY: touch && touch.screenY || 0,\n                shiftKey: e.shiftKey,\n            });\n\n            (pseudoMouse as any).clonedFromTouch = true;\n\n            const result = targetFunction(pseudoMouse);\n\n            if (result === false || pseudoMouse.defaultPrevented) {\n                cancelEvent(e);\n            }\n\n            return result;\n        };\n\n        mappings[eventName].forEach((mapping: string) => {\n            observable.addEventListener(`touch${mapping}`,\n                wrap(targetFunction, wrapper, `touch${eventName}`, observable), capturePhase);\n        });\n    };\n    detachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        mappings[eventName].forEach((mapping: string) => {\n            observable.removeEventListener(`touch${mapping}`,\n                unwrap(targetFunction, `touch${eventName}`, observable), capturePhase);\n        });\n    };\n}\nelse {\n    attachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        observable.addEventListener(`mouse${eventName}`, targetFunction, capturePhase);\n    };\n    detachPointer = function (observable: EventTarget, eventName: PointerEventShortName,\n                              targetFunction: (e: MouseEvent) => any, capturePhase?: boolean) {\n        observable.removeEventListener(`mouse${eventName}`, targetFunction, capturePhase);\n    };\n}\n\nconst runningFuncs: (() => void)[] = [];\n\nexport { attachPointer, detachPointer };\n\n/* tslint:disable:no-magic-numbers object-literal-sort-keys */\nexport const keyFix: any = {\n    Backspace: 8,\n    '\\t': ['Tab', 9],\n    '\\n': ['Enter', 13],\n    Escape: 27,\n    End: 35,\n    Home: 36,\n    ArrowLeft: 37,\n    ArrowUp: 38,\n    ArrowRight: 39,\n    ArrowDown: 40,\n    Delete: 46,\n};\n/* tslint:enable:no-magic-numbers object-literal-sort-keys */\n\nexport function keyPressed(e: KeyboardEvent, ...chars: string[]) {\n    for (let i = 0; i < chars.length; i++) {\n        const chr = chars[i];\n        if (Object.keys(keyFix).indexOf(chr) !== -1) {\n            const [key, keyCode] = Array.isArray(keyFix[chr]) ? keyFix[chr] : [chr, keyFix[chr]];\n            if (e.key === key || e.keyCode === keyCode) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexport function cancelEvent(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n}\n\nexport function throttledFunction(func: () => void, timeout?: number) {\n    if (runningFuncs.indexOf(func) === -1) {\n        runningFuncs.push(func);\n        const wrapper = () => {\n            func();\n            runningFuncs.splice(runningFuncs.indexOf(func), 1);\n        };\n\n        if (timeout) {\n            setTimeout(wrapper, timeout);\n        }\n        else {\n            requestAnimationFrame(wrapper);\n        }\n    }\n}\n\nexport function addThrottledEvent(observable: EventTarget,\n                                  eventName: string,\n                                  targetFunction: (e?: Event) => any,\n                                  capturePhase?: boolean) {\n    let running = false;\n    const wrapper = (e: Event) => {\n        if (!running) {\n            running = true;\n            requestAnimationFrame(() => {\n                targetFunction(e);\n                running = false;\n            });\n        }\n    };\n\n    observable.addEventListener(eventName,\n        wrap(targetFunction, wrapper, `throttle${eventName}`, observable), capturePhase);\n}\n\nexport function removeThrottledEvent(observable: EventTarget,\n                                     eventName: string,\n                                     targetFunction: (e?: Event) => any,\n                                     capturePhase?: boolean) {\n    observable.removeEventListener(eventName,\n        unwrap(targetFunction, `throttle${eventName}`, observable), capturePhase);\n}\n\nexport function elemCoords(elem: HTMLElement, e: MouseEvent): { x: number, y: number } {\n    const rect = elem.getBoundingClientRect();\n    return {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ts/Common.ts","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/kantoradio/canvas-equalizer\n */\n\n/* tslint:disable:no-magic-numbers no-bitwise */\n\nimport deepAssign from 'deep-assign';\nimport { FFTReal } from './FFTNR';\nimport IEqualizerOptions from './IEqualizerOptions';\n\nconst defaultOptions: IEqualizerOptions = {\n    validYRangeHeight: 255,\n    visibleBinCount: 512,\n};\n\nexport default class Equalizer {\n\n    private _options: IEqualizerOptions;\n    private _visibleFrequencies: Float32Array;\n    private _equivalentZones: Uint16Array;\n    private _equivalentZonesFrequencyCount: Float32Array;\n    private _zeroChannelValueY: number;\n    private _maximumChannelValue: number;\n    private _minimumChannelValue: number;\n    private _minusInfiniteChannelValue: number;\n    private _maximumChannelValueY: number;\n    private _minimumChannelValueY: number;\n    private _filterLength: number;\n    private _sampleRate: number;\n    private _isNormalized: boolean;\n    private _binCount: number;\n    private _audioContext: AudioContext;\n    private _filterKernel: AudioBuffer;\n    private _convolver: ConvolverNode;\n    private _tmp: Float32Array;\n    private _channelCurves: Int16Array[];\n    private _actualChannelCurve: Int16Array;\n    private _channelIndex: number;\n\n    constructor(filterLength: number, audioContext: AudioContext, options: IEqualizerOptions = {}) {\n        Equalizer._validateFilterLength(filterLength);\n\n        this._options = deepAssign({}, defaultOptions, options);\n        this._filterLength = filterLength;\n        this._sampleRate = audioContext.sampleRate || 44100;\n        this._isNormalized = false;\n        this._binCount = (filterLength >>> 1) + 1;\n        this._audioContext = audioContext;\n        this._filterKernel = audioContext.createBuffer(2, filterLength, this._sampleRate);\n        this._convolver = audioContext.createConvolver();\n        this._convolver.normalize = false;\n        this._convolver.buffer = this._filterKernel;\n        this._tmp = new Float32Array(filterLength);\n        this._channelCurves = [\n            new Int16Array(this._options.visibleBinCount!), new Int16Array(this._options.visibleBinCount!)];\n        this._actualChannelCurve = new Int16Array(this._options.visibleBinCount!);\n        this._channelIndex = -1;\n\n        this._zeroChannelValueY = this._options.validYRangeHeight! >>> 1;\n        this._maximumChannelValue = this._options.validYRangeHeight! >>> 1;\n        this._minimumChannelValue = -(this._options.validYRangeHeight! >>> 1);\n        this._minusInfiniteChannelValue = -(this._options.validYRangeHeight! >>> 1) - 1;\n        this._maximumChannelValueY = 0;\n        this._minimumChannelValueY = this._options.validYRangeHeight! - 1;\n\n        this._visibleFrequencies = new Float32Array(this._options.visibleBinCount!);\n        this._equivalentZones = new Uint16Array([31, 62, 125, 250, 500, 1000, 2000, 4000, 8000, 16000]);\n\n        /* [0, +9, +9, +18, +35, +36, +70, +72, +72, +72, visibleBinCount] */\n        let eqz = [0, 9, 18, 36, 71, 107, 177, 249, 321, 393, 512];\n        const ratio = this._options.visibleBinCount! / eqz[eqz.length - 1];\n        let freqSteps = [5, 5, 5, 5, 10, 10, 20, 40, 80, 89];\n        const firstFreqs = [5, 50, 95, 185, 360, 720, 1420, 2860, 5740, 11498];\n        let f = firstFreqs[0];\n\n        if (this._options.visibleBinCount! !== eqz[eqz.length - 1]) {\n            eqz = eqz.map((num: number) => Math.round(num * ratio));\n            freqSteps = freqSteps.map((num: number) => num / ratio);\n        }\n\n        this._equivalentZonesFrequencyCount = new Float32Array(eqz);\n\n        for (let i = 0, s = 0; i < this._options.visibleBinCount!; i++) {\n            this._visibleFrequencies[i] = f;\n            if (s !== eqz.length - 1 && s !== firstFreqs.length - 1 && i + 1 >= eqz[s + 1]) {\n                s++;\n                f = firstFreqs[s];\n            }\n            else {\n                f += freqSteps[s];\n            }\n        }\n\n        this.reset();\n    }\n\n    public reset() {\n        for (let i = this._options.visibleBinCount! - 1; i >= 0; i--) {\n            this._channelCurves[0][i] = this._zeroChannelValueY;\n            this._channelCurves[1][i] = this._zeroChannelValueY;\n            this._actualChannelCurve[i] = this._zeroChannelValueY;\n        }\n\n        this.updateFilter(true);\n        this.updateActualChannelCurve(0);\n    }\n\n    public clampY(y: number): number {\n        const maxY = this._maximumChannelValueY;\n        const minY = this._minimumChannelValueY;\n\n        return y <= maxY ? maxY : (y > minY ? this._options.validYRangeHeight! + 1 : y);\n    }\n\n    public yToDB(y: number): number {\n        const maxY = this._maximumChannelValueY;\n        const minY = this._minimumChannelValueY;\n\n        return y <= maxY ? 40 : (y > minY ? -Infinity : Equalizer._lerp(maxY, 40, minY, -40, y));\n    }\n\n    public yToMagnitude(y: number): number {\n        // 40dB = 100\n        // -40dB = 0.01\n        // magnitude = 10 ^ (dB/20)\n        // log a (x^p) = p * log a (x)\n        // x^p = a ^ (p * log a (x))\n        // 10^p = e ^ (p * log e (10))\n        const maxY = this._maximumChannelValueY;\n        const minY = this._minimumChannelValueY;\n\n        return y <= maxY ? 100 :\n            (y > minY ? 0 : Math.exp(Equalizer._lerp(maxY, 2, minY, -2, y) * Math.LN10)); // 2 = 40dB/20\n    }\n\n    public magnitudeToY(magnitude: number): number {\n        // 40dB = 100\n        // -40dB = 0.01\n        const zcy = this._zeroChannelValueY;\n\n        return magnitude >= 100\n               ? this._maximumChannelValueY\n               : (magnitude < 0.01\n                  ? this._options.validYRangeHeight! + 1\n                  : Math.round((zcy - (zcy * Math.log(magnitude) / Math.LN10 * 0.5)) - 0.4));\n    }\n\n    public visibleBinToZoneIndex(visibleBinIndex: number): number {\n        if (visibleBinIndex >= (this._options.visibleBinCount! - 1)) {\n            return this._equivalentZones.length - 1;\n        }\n        else if (visibleBinIndex > 0) {\n            const z = this._equivalentZonesFrequencyCount;\n\n            for (let i = z.length - 1; i >= 0; i--) {\n                if (visibleBinIndex >= z[i]) {\n                    return i;\n                }\n            }\n        }\n\n        return 0;\n    }\n\n    public visibleBinToFrequency(visibleBinIndex: number): number {\n        const vf = this._visibleFrequencies;\n        const vbc = this._options.visibleBinCount!;\n\n        if (visibleBinIndex >= vbc - 1) {\n            return vf[vbc - 1];\n        }\n        else if (visibleBinIndex > 0) {\n            return vf[visibleBinIndex];\n        }\n\n        return vf[0];\n    }\n\n    public visibleBinToFrequencyGroup(visibleBinIndex: number): number[] {\n        const ez = this._equivalentZones;\n        const vf = this._visibleFrequencies;\n        const vbc = this._options.visibleBinCount!;\n\n        if (visibleBinIndex >= vbc - 1) {\n            return [Math.round(vf[vbc - 1]), Math.round(ez[ez.length - 1])];\n        }\n        else if (visibleBinIndex > 0) {\n            const ezc = this._equivalentZonesFrequencyCount;\n\n            for (let i = ezc.length - 1; i >= 0; i--) {\n                if (visibleBinIndex >= ezc[i]) {\n                    return [Math.round(vf[visibleBinIndex]), Math.round(ez[i])];\n                }\n            }\n        }\n\n        return [Math.round(vf[0]), Math.round(ez[0])];\n    }\n\n    public changeZoneY(channelIndex: number, x: number, y: number) {\n        let i = this.visibleBinToZoneIndex(x);\n        const ii = this._equivalentZonesFrequencyCount[i + 1];\n        const cy = this.clampY(y);\n        const curve = this._channelCurves[channelIndex];\n\n        for (i = this._equivalentZonesFrequencyCount[i]; i < ii; i++) {\n            curve[i] = cy;\n        }\n    }\n\n    public copyFilter(sourceChannel: number, destinationChannel: number) {\n        const src = this._filterKernel.getChannelData(sourceChannel);\n        const dst = this._filterKernel.getChannelData(destinationChannel);\n\n        for (let i = (this._filterLength - 1); i >= 0; i--) {\n            dst[i] = src[i];\n        }\n\n        this._convolver.buffer = this._filterKernel;\n    }\n\n    public updateFilter(updateBothChannels: boolean) {\n        const channelIndex = Math.max(this._channelIndex, 0);\n        const isSameFilterLR = channelIndex === -1;\n        const filterLength = this._filterLength;\n        const curve = this._channelCurves[channelIndex];\n        const valueCount = this._options.visibleBinCount!;\n        const bw = this._sampleRate / filterLength;\n        const filterLength2 = (filterLength >>> 1);\n        const filter = this._filterKernel.getChannelData(channelIndex);\n        const _visibleFrequencies = this._visibleFrequencies;\n        /* M = filterLength2, so, M_HALF_PI_FFTLEN2 = (filterLength2 * 0.5 * Math.PI) / filterLength2 */\n        const M_HALF_PI_FFTLEN2 = 0.5 * Math.PI;\n        let invMaxMag = 1;\n        let repeat = Number(this._isNormalized) + 1;\n\n        // fill in all filter points, either averaging or interpolating them as necessary\n        do {\n            repeat--;\n            let i = 1;\n            let ii = 0;\n\n            // tslint:disable-next-line:no-constant-condition\n            while (true) {\n                const freq = bw * i;\n\n                if (freq >= _visibleFrequencies[0]) {\n                    break;\n                }\n\n                const mag = this.yToMagnitude(curve[0]);\n                filter[i << 1] = mag * invMaxMag;\n                i++;\n            }\n\n            while (bw > _visibleFrequencies[ii + 1] - _visibleFrequencies[ii] &&\n                   i < filterLength2 && ii < valueCount - 1) {\n                const freq = bw * i;\n                let avg = 0;\n                let avgCount = 0;\n\n                do {\n                    avg += curve[ii];\n                    avgCount++;\n                    ii++;\n                } while (freq > _visibleFrequencies[ii] && ii < valueCount - 1);\n\n                const mag = this.yToMagnitude(avg / avgCount);\n                filter[i << 1] = mag * invMaxMag;\n                i++;\n            }\n\n            for (; i < filterLength2; i++) {\n                const freq = bw * i;\n                let mag: number;\n\n                if (freq >= _visibleFrequencies[valueCount - 1]) {\n                    mag = this.yToMagnitude(curve[valueCount - 1]);\n                }\n                else {\n                    while (ii < (valueCount - 1) && freq > _visibleFrequencies[ii + 1]) {\n                        ii++;\n                    }\n\n                    mag = this.yToMagnitude(\n                        Equalizer._lerp(_visibleFrequencies[ii], curve[ii],\n                                       _visibleFrequencies[ii + 1], curve[ii + 1], freq));\n                }\n                filter[i << 1] = mag * invMaxMag;\n            }\n            // since DC and Nyquist are purely real, do not bother with them in the for loop,\n            // just make sure neither one has a gain greater than 0 dB\n            filter[0] = (filter[2] >= 1 ? 1 : filter[2]);\n            filter[1] = (filter[filterLength - 2] >= 1 ? 1 : filter[filterLength - 2]);\n\n            // convert the coordinates from polar to rectangular\n            for (i = filterLength - 2; i >= 2; i -= 2) {\n                /*                -k.j\n                 * polar = Mag . e\n                 *\n                 * where:\n                 * k = (M / 2) * pi * i / (fft length / 2)\n                 * i = index varying from 0 to (fft length / 2)\n                 *\n                 * rectangular:\n                 * real = Mag . cos(-k)\n                 * imag = Mag . sin(-k)\n                 */\n                const k = M_HALF_PI_FFTLEN2 * (i >>> 1);\n                /* ****NOTE:\n                 * when using FFTReal ou FFTNR, k MUST BE passed as the argument of sin and cos, due to the\n                 * signal of the imaginary component\n                 * RFFT, intel and other fft's use the opposite signal... therefore, -k MUST BE passed!!\n                 */\n                filter[i + 1] = (filter[i] * Math.sin(k));\n                filter[i] *= Math.cos(k);\n            }\n\n            FFTReal(filter, filterLength, -1);\n\n            if (repeat) {\n                // get the actual filter response, and then, compensate\n                invMaxMag = this._applyWindowAndComputeActualMagnitudes(filter);\n\n                if (invMaxMag <= 0) {\n                    repeat = 0;\n                }\n\n                invMaxMag = 1.0 / invMaxMag;\n            }\n        } while (repeat);\n\n        if (isSameFilterLR) {\n            // copy the filter to the other channel\n            this.copyFilter(channelIndex, 1 - channelIndex);\n            return;\n        }\n\n        if (updateBothChannels) {\n            // update the other channel as well\n            const oldChannelIndex = this._channelIndex;\n\n            this._channelIndex = 1 - channelIndex;\n            this.updateFilter(false);\n            this._channelIndex = oldChannelIndex;\n            return;\n        }\n\n        this._convolver.buffer = this._filterKernel;\n    }\n\n    public updateActualChannelCurve(channelIndex: number) {\n        const filterLength = this._filterLength;\n        const curve = this._actualChannelCurve;\n        const valueCount = this._options.visibleBinCount!;\n        const bw = this._sampleRate / filterLength;\n        const filterLength2 = (filterLength >>> 1);\n        const tmp = this._tmp;\n        const _visibleFrequencies = this._visibleFrequencies;\n        const filter = this._filterKernel.getChannelData(channelIndex);\n\n        this._applyWindowAndComputeActualMagnitudes(filter);\n\n        // tmp now contains (filterLength2 + 1) magnitudes\n        let i = 0;\n        let ii = 0;\n\n        while (ii < valueCount - 1 && i < filterLength2 && bw > _visibleFrequencies[ii + 1] - _visibleFrequencies[ii]) {\n            let freq = bw * i;\n\n            while (i < filterLength2 && freq + bw < _visibleFrequencies[ii]) {\n                i++;\n                freq = bw * i;\n            }\n\n            curve[ii] = this.magnitudeToY(\n                Equalizer._lerp(freq, tmp[i], freq + bw, tmp[i + 1], _visibleFrequencies[ii]));\n            ii++;\n        }\n\n        i++;\n\n        while (i < filterLength2 && ii < valueCount) {\n            let freq: number;\n            let avg = 0;\n            let avgCount = 0;\n\n            do {\n                avg += tmp[i];\n                avgCount++;\n                i++;\n                freq = bw * i;\n            } while (freq < _visibleFrequencies[ii] && i < filterLength2);\n\n            curve[ii] = this.magnitudeToY(avg / avgCount);\n            ii++;\n        }\n\n        i = (this._sampleRate >>> 1) >= _visibleFrequencies[valueCount - 1]\n            ? curve[ii - 1]\n            : this._options.validYRangeHeight! + 1;\n\n        for (; ii < valueCount; ii++) {\n            curve[ii] = i;\n        }\n    }\n\n    private _applyWindowAndComputeActualMagnitudes(filter: Float32Array): number {\n        const filterLength = this._filterLength;\n        const tmp = this._tmp;\n        const filterLength2 = (filterLength >>> 1);\n        const M = filterLength2;\n        const PI2_M = 2 * Math.PI / M;\n\n        // it is not possible to know what kind of window the browser will use,\n        // so make an assumption here... Blackman window!\n        // ...at least it is the one I used, back in C++ times :)\n        for (let i = M; i >= 0; i--) {\n            /* Hanning window */\n            // tmp[i] = filter[i] * (0.5 - (0.5 * cos(PI2_M * i)));\n            /* Hamming window */\n            // tmp[i] = filter[i] * (0.54 - (0.46 * cos(PI2_M * i)));\n            /* Blackman window */\n            tmp[i] = filter[i] * (0.42 - (0.5 * Math.cos(PI2_M * i)) + (0.08 * Math.cos(2 * PI2_M * i)));\n        }\n\n        for (let i = filterLength - 1; i > M; i--) {\n            tmp[i] = 0;\n        }\n\n        // calculate the spectrum\n        FFTReal(tmp, filterLength, 1);\n        // save Nyquist for later\n        const ii = tmp[1];\n        let maxMag = (tmp[0] > ii ? tmp[0] : ii);\n\n        for (let i = 2; i < filterLength; i += 2) {\n            const rval = tmp[i];\n            const ival = tmp[i + 1];\n            const mag = Math.sqrt((rval * rval) + (ival * ival));\n\n            tmp[i >>> 1] = mag;\n            if (mag > maxMag) {\n                maxMag = mag;\n            }\n        }\n\n        // restore Nyquist in its new position\n        tmp[filterLength2] = ii;\n        return maxMag;\n    }\n\n    private static _validateFilterLength(filterLength: number) {\n        if (filterLength < 8 || (filterLength & (filterLength - 1))) {\n            throw new Error('The FFT size must be power of 2 and not less than 8.');\n        }\n    }\n\n    private static _lerp(x0: number, y0: number, x1: number, y1: number, x: number): number {\n        return ((x - x0) * (y1 - y0) / (x1 - x0)) + y0;\n    }\n\n    // virtual properties\n\n    get filterLength(): number {\n        return this._filterLength;\n    }\n\n    set filterLength(newFilterLength: number) {\n        if (this._filterLength !== newFilterLength) {\n            Equalizer._validateFilterLength(newFilterLength);\n            this._filterLength = newFilterLength;\n            this._binCount = (newFilterLength >>> 1) + 1;\n            this._filterKernel = this._audioContext.createBuffer(2, newFilterLength, this._sampleRate);\n            this._tmp = new Float32Array(newFilterLength);\n            this.updateFilter(true);\n        }\n    }\n\n    get sampleRate(): number {\n        return this._sampleRate;\n    }\n\n    set sampleRate(newSampleRate: number) {\n        if (this.sampleRate !== newSampleRate) {\n            this._sampleRate = newSampleRate;\n            this._filterKernel = this._audioContext.createBuffer(2, this._filterLength, newSampleRate);\n            this.updateFilter(true);\n        }\n    }\n\n    get isNormalized(): boolean {\n        return this._isNormalized;\n    }\n\n    set isNormalized(isNormalized: boolean) {\n        if (this.isNormalized !== isNormalized) {\n            this._isNormalized = isNormalized;\n            this.updateFilter(true);\n        }\n    }\n\n    get audioContext(): AudioContext {\n        return this._audioContext;\n    }\n\n    set audioContext(newAudioContext: AudioContext) {\n        if (this.audioContext !== newAudioContext) {\n            this._convolver.disconnect(0);\n            this._audioContext = newAudioContext;\n            this._filterKernel = newAudioContext.createBuffer(2, this._filterLength, this._sampleRate);\n            this._convolver = newAudioContext.createConvolver();\n            this._convolver.normalize = false;\n            this._convolver.buffer = this._filterKernel;\n            this.updateFilter(true);\n        }\n    }\n\n    get options(): IEqualizerOptions {\n        return deepAssign({}, defaultOptions, this._options);\n    }\n\n    get visibleFrequencies(): Float32Array {\n        return this._visibleFrequencies;\n    }\n\n    get channelCurves(): Int16Array[] {\n        return this._channelCurves.slice();\n    }\n\n    get actualChannelCurve(): Int16Array {\n        return this._actualChannelCurve;\n    }\n\n    get convolver(): ConvolverNode {\n        return this._convolver;\n    }\n\n    get channelIndex(): number {\n        return this._channelIndex;\n    }\n\n    get zeroChannelValueY(): number {\n        return this._zeroChannelValueY;\n    }\n\n    get equivalentZonesFrequencyCount(): Float32Array {\n        return this._equivalentZonesFrequencyCount;\n    }\n\n    set channelIndex(newChannelIndex: number) {\n        this._channelIndex = newChannelIndex;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ts/Equalizer.ts","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/kantoradio/canvas-equalizer\n */\n\n/*==============================================================================\n *\n * This algorithm is an adaptation of the algorithm from the hardcover\n * book \"Numerical Recipes: The Art of Scientific Computing, 3rd Edition\",\n * with some additional optimizations and changes.\n *\n * I HIGHLY recommend this book!!! :D\n *\n *==============================================================================\n */\n\n/* Ordering of data\n * time [0]          | Real [bin 0]\n * time [1]          | Real [bin length/2]\n * time [2]          | Real [bin 1]\n * time [3]          | Imag [bin 1]\n * time [...]        | Real [bin ...]\n * time [...]        | Imag [bin ...]\n * time [length-2]   | Real [bin length/2-1]\n * time [length-1]   | Imag [bin length/2-1]\n */\n\n/* tslint:disable:no-magic-numbers no-bitwise */\n\nexport function FFTComplex(data: Float32Array, n: number, isign: number) {\n    const nn = n << 1;\n    let mmax: number;\n    let m: number;\n    let j = 1;\n    let istep: number;\n    let i: number;\n    let wr: number;\n    let wpr: number;\n    let wpi: number;\n    let wi: number;\n    let theta: number;\n    let tempr: number;\n    let tempi: number;\n    let halfmmax: number;\n    let dj1: number;\n    let dj: number;\n\n    // bit reversal swap\n    for (i = 1; i < nn; i += 2) {\n        if (j > i) {\n            tempr = data[j - 1];\n            data[j - 1] = data[i - 1];\n            data[i - 1] = tempr;\n            tempr = data[j];\n            data[j] = data[i];\n            data[i] = tempr;\n        }\n\n        m = n;\n\n        while (m >= 2 && j > m) {\n            j -= m;\n            m >>>= 1;\n        }\n\n        j += m;\n    }\n\n    // first pass (mmax = 2 / wr = 1 / wi = 0)\n    for (i = 1; i <= nn; i += 4) {\n        j = i + 2;\n        tempr = data[j - 1];\n        tempi = data[j];\n        data[j - 1] = data[i - 1] - tempr;\n        data[j] = data[i] - tempi;\n        data[i - 1] += tempr;\n        data[i] += tempi;\n    }\n\n    /* I decided not to unroll the following steps in favor of the cache memory\n\n    // second pass (mmax = 4 / wr = 1 / wi = 0) A\n    for (i = 1; i <= nn; i += 8) {\n        j = i + 4;\n        tempr = data[j - 1];\n        tempi = data[j];\n        data[j - 1] = data[i - 1] - tempr;\n        data[j] = data[i] - tempi;\n        data[i - 1] += tempr;\n        data[i] += tempi;\n    }\n\n    // second pass (mmax = 4 / wr = 0 / wi = isign) B\n    if (isign === 1) {\n        for (i = 3; i <= nn; i += 8) {\n            j = i + 4;\n            tempr = -data[j];\n            tempi = data[j - 1];\n            data[j - 1] = data[i - 1] - tempr;\n            data[j] = data[i] - tempi;\n            data[i - 1] += tempr;\n            data[i] += tempi;\n        }\n    }\n    else {\n        for (i = 3; i <= nn; i += 8) {\n            j = i + 4;\n            tempr = data[j];\n            tempi = -data[j - 1];\n            data[j - 1] = data[i - 1] - tempr;\n            data[j] = data[i] - tempi;\n            data[i - 1] += tempr;\n            data[i] += tempi;\n        }\n    }\n\n    mmax = 8;\n    theta = isign * Math.PI * 0.25;\n    */\n\n    mmax = 4;\n    theta = isign * Math.PI * 0.5;\n\n    while (nn > mmax) {\n        istep = mmax << 1;\n        wpi = Math.sin(theta);\n        theta *= 0.5;\n        wpr = Math.sin(theta);\n        wpr *= -2.0 * wpr;\n\n        // ---------------------------------------------\n        // special case for the inner loop when m = 1:\n        // wr = 1 / wi = 0\n        for (i = 1; i <= nn; i += istep) {\n            j = i + mmax;\n            tempr = data[j - 1];\n            tempi = data[j];\n            data[j - 1] = data[i - 1] - tempr;\n            data[j] = data[i] - tempi;\n            data[i - 1] += tempr;\n            data[i] += tempi;\n        }\n\n        wr = 1.0 + wpr;\n        wi = wpi;\n        // ---------------------------------------------\n\n        halfmmax = ((mmax >>> 1) + 1);\n\n        for (m = 3; m < halfmmax; m += 2) {\n            for (i = m; i <= nn; i += istep) {\n                j = i + mmax;\n                tempr = (wr * (dj1 = data[j - 1])) - (wi * (dj = data[j]));\n                tempi = (wr * dj) + (wi * dj1);\n                data[j - 1] = data[i - 1] - tempr;\n                data[j] = data[i] - tempi;\n                data[i - 1] += tempr;\n                data[i] += tempi;\n            }\n            wr += ((tempr = wr) * wpr) - (wi * wpi);\n            wi += (wi * wpr) + (tempr * wpi);\n        }\n\n        // ---------------------------------------------\n        // special case for the inner loop when m = ((mmax >>> 1) + 1):\n        // wr = 0 / wi = isign\n        if (isign === 1) {\n            for (i = m; i <= nn; i += istep) {\n                j = i + mmax;\n                tempr = -data[j];\n                tempi = data[j - 1];\n                data[j - 1] = data[i - 1] - tempr;\n                data[j] = data[i] - tempi;\n                data[i - 1] += tempr;\n                data[i] += tempi;\n            }\n            wr = -wpi;\n            wi = 1.0 + wpr;\n        }\n        else {\n            for (i = m; i <= nn; i += istep) {\n                j = i + mmax;\n                tempr = data[j];\n                tempi = -data[j - 1];\n                data[j - 1] = data[i - 1] - tempr;\n                data[j] = data[i] - tempi;\n                data[i - 1] += tempr;\n                data[i] += tempi;\n            }\n            wr = wpi;\n            wi = -1.0 - wpr;\n        }\n\n        m += 2;\n        // ---------------------------------------------\n\n        for (; m < mmax; m += 2) {\n            for (i = m; i <= nn; i += istep) {\n                j = i + mmax;\n                tempr = (wr * (dj1 = data[j - 1])) - (wi * (dj = data[j]));\n                tempi = (wr * dj) + (wi * dj1);\n                data[j - 1] = data[i - 1] - tempr;\n                data[j] = data[i] - tempi;\n                data[i - 1] += tempr;\n                data[i] += tempi;\n            }\n            wr += ((tempr = wr) * wpr) - (wi * wpi);\n            wi += (wi * wpr) + (tempr * wpi);\n        }\n\n        mmax = istep;\n    }\n}\n\nexport function FFTReal(data: Float32Array, n: number, isign: number) {\n    let i: number;\n    let i1: number;\n    let i2: number;\n    let i3: number;\n    let i4: number;\n    let d1: number;\n    let d2: number;\n    let d3: number;\n    let d4: number;\n    const n4 = n >>> 2;\n    let c2: number;\n    let h1r: number;\n    let h1i: number;\n    let h2r: number;\n    let h2i: number;\n    let wr: number;\n    let wi: number;\n    let wpr: number;\n    let wpi: number;\n    let theta = Math.PI / (n >>> 1);\n\n    if (isign === 1) {\n        c2 = -0.5;\n        FFTComplex(data, n >>> 1, 1);\n    }\n    else {\n        c2 = 0.5;\n        theta = -theta;\n    }\n\n    wpr = Math.sin(0.5 * theta);\n    wr = 1.0 + (wpr *= (-2.0 * wpr));\n    wi = (wpi = Math.sin(theta));\n\n    for (i = 1; i < n4; i++) {\n        i2 = 1 + (i1 = (i << 1));\n        i4 = 1 + (i3 = (n - i1));\n        h1r = 0.5 * ((d1 = data[i1]) + (d3 = data[i3]));\n        h1i = 0.5 * ((d2 = data[i2]) - (d4 = data[i4]));\n        h2r = -c2 * (d2 + d4);\n        h2i = c2 * (d1 - d3);\n        data[i1] = h1r + (d1 = (wr * h2r)) - (d2 = (wi * h2i));\n        data[i2] = h1i + (d3 = (wr * h2i)) + (d4 = (wi * h2r));\n        data[i3] = h1r - d1 + d2;\n        data[i4] = d3 + d4 - h1i;\n        wr += ((h1r = wr) * wpr) - (wi * wpi);\n        wi += (wi * wpr) + (h1r * wpi);\n    }\n\n    if (isign === 1) {\n        data[0] = (h1r = data[0]) + data[1];\n        data[1] = h1r - data[1];\n    }\n    else {\n        data[0] = 0.5 * ((h1r = data[0]) + data[1]);\n        data[1] = 0.5 * (h1r - data[1]);\n        FFTComplex(data, n >>> 1, -1);\n        h1r = 2.0 / n;\n\n        for (i = n - 1; i >= 0; i--) {\n            data[i] *= h1r;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ts/FFTNR.ts","/**\n * canvas-equalizer is distributed under the FreeBSD License\n *\n * Copyright (c) 2012-2017 Armando Meziat, Carlos Rafael Gimenes das Neves\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those\n * of the authors and should not be interpreted as representing official policies,\n * either expressed or implied, of the FreeBSD Project.\n *\n * https://github.com/kantoradio/canvas-equalizer\n */\n\nimport defaultLocale from '../locales/en.json';\n\nimport ILocale from './ILocale';\n\ninterface ILocaleSet {\n    [langId: string]: ILocale;\n}\n\nconst defaultLanguage = 'en';\n\nexport default class L10n {\n\n    private _language: string;\n    private _locales: ILocaleSet = {};\n\n    constructor(language: string = defaultLanguage) {\n        this._language = language;\n        this.loadLocale(defaultLanguage, defaultLocale);\n    }\n\n    public loadLocale(language: string, locale: ILocale) {\n        this._locales[language] = locale;\n    }\n\n    public get(tag: string) {\n        let locales = this._locales[this._language] || this._locales[defaultLanguage];\n\n        if (locales[tag] === undefined) {\n            locales = this._locales[defaultLanguage];\n        }\n\n        return locales[tag];\n    }\n\n    public format(str: string, ...args: any[]): string {\n        str = this.get(str);\n        args.forEach((arg: any, i: number) => {\n            str = str.replace(new RegExp(`\\\\{${i}\\\\}`, 'g'), arg.toLocaleString(this._language));\n        });\n\n        return str;\n    }\n\n    get language(): string {\n        return this._language;\n    }\n\n    set language(language: string) {\n        this._language = language;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ts/L10n.ts","'use strict';\nmodule.exports = function (x) {\n\tvar type = typeof x;\n\treturn x !== null && (type === 'object' || type === 'function');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/is-obj/index.js\n// module id = 8\n// module chunks = 0 1","module.exports = {\n\t\"cursor.label\": \"Cursor: <span></span> dB\",\n\t\"curve.label\": \"Curve: <span></span> dB\",\n\t\"frequency.label\": \"Frequency: <span></span>\",\n\t\"frequency.text\": \"{0} ({1})\",\n\t\"frequency.format\": \"{0} {1}\",\n\t\"frequency.unit.Hz\": \"Hz\",\n\t\"frequency.unit.kHz\": \"kHz\",\n\t\"menu\": \"Options\",\n\t\"menu.both\": \"Same curve for both channels\",\n\t\"menu.both.left\": \"Use left curve\",\n\t\"menu.both.right\": \"Use right curve\",\n\t\"menu.one\": \"One curve for each channel\",\n\t\"menu.one.left\": \"Show left curve\",\n\t\"menu.one.right\": \"Show right curve\",\n\t\"menu.zones\": \"Show zones\",\n\t\"menu.zoneEdit\": \"Edit by zones\",\n\t\"menu.normalizeCurves\": \"Normalize curves\",\n\t\"menu.actualResponse\": \"Show actual response\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./locales/en.json\n// module id = 9\n// module chunks = 0 1"],"sourceRoot":""}